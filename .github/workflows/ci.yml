

# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-maven

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Java CI with Maven

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

# Correct placement for permissions block (workflow level)
permissions:
  contents: read # Allow reading your repository content
  security-events: write # Allow submitting dependency graph information

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 1.8
        uses: actions/setup-java@v4 # Updated to v4
        with:
          java-version: '8' # Use '8' for Java 1.8
          distribution: 'temurin' # Recommended distribution for better stability
          cache: maven # Enable Maven caching for faster builds

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      # Corrected indentation for the next step
      #- name: Update dependency graph
      #  uses: advanced-security/maven-dependency-submission-action@571e99aab1055c2e71a1e2309b9691de18d6b7d6

      - name: List files for debugging
        run: |
          ls -R
          pwd # Print current working directory

      # Docker steps: Corrected indentation and syntax
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3 # Required for docker/build-push-action

      - name: Login to Docker Hub
        uses: docker/login-action@v3 # Explicitly log in to Docker Hub
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push docker image
        uses: docker/build-push-action@v6
        with:
          context: . # <----- Assumes your Dockerfile is in the root of the repository
          push: true # This enables pushing the image
          tags: 12766/umeshmanral # Specify image name and tag(s)
          # No 'registry:' parameter needed here, it's handled by the login action


